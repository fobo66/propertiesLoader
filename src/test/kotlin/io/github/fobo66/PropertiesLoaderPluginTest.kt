/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package io.github.fobo66

import org.gradle.testfixtures.ProjectBuilder
import kotlin.test.Test
import kotlin.test.assertFalse
import kotlin.test.assertNotNull

/**
 * Unit tests for the 'io.github.fobo66.propertiesloader' plugin.
 */
class PropertiesLoaderPluginTest {
    @Test
    fun `plugin registers task`() {
        // Create a test project and apply the plugin
        val project = ProjectBuilder.builder().build()
        project.plugins.apply("io.github.fobo66.propertiesloader")

        // Verify the result
        assertNotNull(project.tasks.findByName("loadProperties"))
    }

    @Test
    fun `task loads properties`() {
        // Create a test project and apply the plugin
        val project = ProjectBuilder.builder().build()
        project.plugins.apply("io.github.fobo66.propertiesloader")
        project.file("test.properties").writeText("testkey=testvalue")
        project.tasks.named("loadProperties", PropertiesLoaderTask::class.java).configure {
            it.propertiesFiles.from(project.file("test.properties"))
        }
        val propertiesLoaderTask = project.tasks.named("loadProperties", PropertiesLoaderTask::class.java).get()

        propertiesLoaderTask.loadProperties()
        assertNotNull(project.extensions.extraProperties["testkey"])
    }

    @Test
    fun `task not loads properties from files that are not properties`() {
        val project = ProjectBuilder.builder().build()
        project.plugins.apply("io.github.fobo66.propertiesloader")
        project.file("test.txt").writeText("testkey=testvalue")
        project.tasks.named("loadProperties", PropertiesLoaderTask::class.java).configure {
            it.propertiesFiles.from(project.file("test.txt"))
        }
        val propertiesLoaderTask = project.tasks.named("loadProperties", PropertiesLoaderTask::class.java).get()

        propertiesLoaderTask.loadProperties()
        assertFalse(project.extensions.extraProperties.has("testKey"))
    }
}
